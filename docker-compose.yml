services:
  frontend:
    container_name: frontend
    build:
      context: . 
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80" 
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: . 
      dockerfile: Dockerfile.backend
    ports:
      - "8080:80" 
    environment:
      - APP_ENV=prod
      - DATABASE_URL=mysql://aesma:aesma@db:3306/portfolio 
    depends_on:
      - db 
    networks:
      - app-network

  # Base de datos: Contenedor MySQL
  db:
    image: mysql:8
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: aesma   
      MYSQL_DATABASE: portfolio           
      MYSQL_USER: aesma                    
      MYSQL_PASSWORD: aesma        
      MYSQL_ROOT_HOST: '%' 
    volumes:
      - db_data:/var/lib/mysql             # Persistencia de datos de la base de datos
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"  
    networks:
      - app-network                      

# PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db         
      PMA_PORT: 3306       
      MYSQL_ROOT_PASSWORD: aesma  
    ports:
      - "8081:80" 
    networks:
      - app-network
    depends_on:
      - db

# Vol√∫menes para persistencia de datos de MySQL
volumes:
  db_data:

networks:
  app-network:
    driver: bridge